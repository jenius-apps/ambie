<Page
    x:Class="AmbientSounds.Views.CompactPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:AmbientSounds.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="using:AmbientSounds.Services"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:strings="using:AmbientSounds.Strings"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:viewmodels="using:AmbientSounds.ViewModels"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    winui:BackdropMaterial.ApplyToRootOrPageBackground="True"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border
            Name="PlayerPanelBorder"
            Grid.RowSpan="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="0,0,0,1">
            <Rectangle Fill="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
        </Border>

        <Grid x:Name="AppTitleBar" Background="Transparent">
            <!--  Width of the padding columns is set in LayoutMetricsChanged handler.  -->
            <!--
                Using padding columns instead of Margin ensures that the background
                paints the area under the caption control buttons (for transparent buttons).
            -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="LeftPaddingColumn" Width="0" />
                <ColumnDefinition />
                <ColumnDefinition x:Name="RightPaddingColumn" Width="0" />
            </Grid.ColumnDefinitions>

            <controls:TitleBarLogo
                Grid.Column="1"
                Margin="10,0,0,0"
                HorizontalAlignment="Left"
                AutomationProperties.AccessibilityView="Raw"
                TextVisible="Collapsed" />

            <TextBlock
                Grid.Column="1"
                Margin="0,10,0,0"
                AutomationProperties.AccessibilityView="Raw"
                FontSize="12"
                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                Text="{x:Bind strings:Resources.MiniText}"
                TextAlignment="Center" />
        </Grid>

        <Grid
            Name="PlayerPanelGrid"
            Grid.Row="1"
            Padding="4,0,6,4"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <Button
                x:Uid="CloseCompactMode"
                Command="{x:Bind ViewModel.CloseCompactCommand}"
                Style="{StaticResource SmallSubtleIconButton}">
                <FontIcon
                    FontFamily="{StaticResource FluentUIGlyphs}"
                    FontSize="14"
                    Glyph="{StaticResource GlyphBack}" />
            </Button>

            <controls:PlayerControl
                Grid.Column="1"
                IsCompact="True"
                PlayButtonVisible="Collapsed" />

            <Button
                Grid.Column="2"
                Margin="8,0,0,0"
                Style="{StaticResource SmallSubtleIconButton}">
                <FontIcon
                    FontFamily="{StaticResource FluentUIGlyphs}"
                    FontSize="{StaticResource SmallIconSize}"
                    Glyph="{StaticResource GlyphSettings}" />
                <Button.Flyout>
                    <MenuFlyout Placement="BottomEdgeAlignedRight">
                        <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.UseCompactMode, Mode=TwoWay}" Text="{x:Bind strings:Resources.SettingsCompactMode}" />
                        <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.PlayAfterFocusEnabled, Mode=TwoWay}" Text="{x:Bind strings:Resources.SettingsPlayAfterFocusHeader}" />
                    </MenuFlyout>
                </Button.Flyout>
            </Button>
        </Grid>

        <Frame x:Name="CompactContentFrame" Grid.Row="2" />
    </Grid>
</Page>
