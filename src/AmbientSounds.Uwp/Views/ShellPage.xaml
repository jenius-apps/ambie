<Page
    x:Class="AmbientSounds.Views.ShellPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:controls="using:AmbientSounds.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:JeniusApps.Common.Models"
    xmlns:strings="using:AmbientSounds.Strings"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    x:Name="RootPage"
    winui:BackdropMaterial.ApplyToRootOrPageBackground="True"
    mc:Ignorable="d">

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource PageBreakpoint1920}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.OpenPaneLength" Value="332" />
                        <Setter Target="PlayerPanelGrid.Margin" Value="332,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource PageBreakpoint1260}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.OpenPaneLength" Value="244" />
                        <Setter Target="PlayerPanelGrid.Margin" Value="244,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource PageBreakpoint920}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.OpenPaneLength" Value="200" />
                        <Setter Target="PlayerPanelGrid.Margin" Value="200,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TitleLogo.TextVisible" Value="Collapsed" />
                        <Setter Target="TitleLogo.Margin" Value="24,14,0,0" />
                        <Setter Target="SearchBox.Visibility" Value="Collapsed" />
                        <Setter Target="SearchButton.Visibility" Value="Visible" />
                        <Setter Target="TrackList.ShowList" Value="False" />
                        <Setter Target="PremiumIcon.Visibility" Value="Visible" />
                        <Setter Target="PremiumText.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.SidePanelMica, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.PaneBackground" Value="Transparent" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.ShowBackgroundImage, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.PaneBackground" Value="{ThemeResource SystemControlAcrylicElementBrush}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.ShowBackgroundImage, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainFrameBorder.Background" Value="Transparent" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  Custom background  -->
        <toolkit:ImageEx
            x:Name="BackgroundImage"
            x:Load="{x:Bind ViewModel.ShowBackgroundImage, Mode=OneWay}"
            IsCacheEnabled="True"
            Source="{x:Bind ViewModel.BackgroundImagePath, Mode=OneWay}"
            Stretch="UniformToFill" />
        <Rectangle
            x:Name="AcrylicLayer"
            x:Load="{x:Bind ViewModel.ShowBackgroundImage, Mode=OneWay}"
            Fill="{ThemeResource SystemControlAcrylicElementBrush}"
            Stretch="Fill" />

        <Grid
            x:Name="AppTitleBar"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Background="Transparent"
            Canvas.ZIndex="1">
            <!--  Source: https://learn.microsoft.com/en-us/windows/apps/develop/title-bar?tabs=winui2#interactive-content  -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="LeftPaddingColumn" Width="0" />
                <ColumnDefinition />
                <ColumnDefinition x:Name="RightPaddingColumn" Width="0" />
            </Grid.ColumnDefinitions>

            <!--  Ambie title bar name  -->
            <controls:TitleBarLogo
                x:Name="TitleLogo"
                Grid.Column="1"
                Margin="14,14,0,0">
                <animations:Implicit.Animations>
                    <animations:OffsetAnimation />
                </animations:Implicit.Animations>
            </controls:TitleBarLogo>
        </Grid>

        <!--  title bar content  -->
        <StackPanel
            x:Name="TitleBar"
            Height="46"
            Margin="78,0,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Orientation="Horizontal"
            Visibility="Collapsed">

            <!--  Focus time banner  -->
            <controls:TimeBanner
                Margin="12,0,0,0"
                Command="{x:Bind ViewModel.HandleTitleBannerCommand}"
                Visibility="{x:Bind ViewModel.FocusTimeBannerVisible, Mode=OneWay}">
                <animations:Implicit.HideAnimations>
                    <animations:OpacityAnimation
                        From="1"
                        To="0"
                        Duration="0:0:0.5" />
                    <animations:TranslationAnimation To="0,-60,0" Duration="0:0:0.5" />
                </animations:Implicit.HideAnimations>
                <animations:Explicit.Animations>
                    <animations:AnimationSet x:Name="ShowTimeBannerAnimations">
                        <animations:TranslationAnimation
                            From="0,-60,0"
                            To="0,0,0"
                            Duration="0:0:0.5" />
                        <animations:OpacityAnimation
                            From="0"
                            To="1"
                            Duration="0:0:0.5" />
                    </animations:AnimationSet>
                </animations:Explicit.Animations>
            </controls:TimeBanner>

            <controls:TwoToneButton
                Margin="12,0,0,0"
                Padding="8,0"
                Command="{x:Bind ViewModel.HandleTitleBannerCommand}"
                Content="{x:Bind strings:Resources.MeditatingText}"
                FontSize="10"
                Visibility="{x:Bind ViewModel.GuideBannerVisible, Mode=OneWay}">
                <controls:TwoToneButton.SecondaryContent>
                    <FontIcon
                        FontFamily="{StaticResource FluentUIGlyphs}"
                        FontSize="12"
                        Glyph="{StaticResource GlyphLeaves}" />
                </controls:TwoToneButton.SecondaryContent>

                <animations:Implicit.HideAnimations>
                    <animations:OpacityAnimation
                        From="1"
                        To="0"
                        Duration="0:0:0.5" />
                    <animations:TranslationAnimation To="0,-60,0" Duration="0:0:0.5" />
                </animations:Implicit.HideAnimations>
                <animations:Explicit.Animations>
                    <animations:AnimationSet x:Name="ShowGuideBannerAnimations">
                        <animations:TranslationAnimation
                            From="0,-60,0"
                            To="0,0,0"
                            Duration="0:0:0.5" />
                        <animations:OpacityAnimation
                            From="0"
                            To="1"
                            Duration="0:0:0.5" />
                    </animations:AnimationSet>
                </animations:Explicit.Animations>
            </controls:TwoToneButton>

        </StackPanel>

        <SplitView
            x:Name="RootSplitView"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="0,0,2,0"
            DisplayMode="Inline"
            IsPaneOpen="True"
            OpenPaneLength="72"
            PaneBackground="{ThemeResource AltHostBrush}">
            <SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <Grid Margin="0,48,0,0">
                        <AutoSuggestBox
                            x:Name="SearchBox"
                            Margin="12,0,12,0"
                            VerticalContentAlignment="Center"
                            DisplayMemberPath="Name"
                            FontSize="12"
                            ItemsSource="{x:Bind ViewModel.SearchAutosuggestItems, Mode=OneWay}"
                            PlaceholderText="Search"
                            QueryIcon="Find"
                            QuerySubmitted="OnQuerySubmitted"
                            TextChanged="OnTextChanged" />

                        <Button
                            x:Name="SearchButton"
                            Height="32"
                            Margin="12,0,12,0"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Visibility="Collapsed">
                            <FontIcon
                                FontFamily="{StaticResource FluentUIGlyphs}"
                                FontSize="16"
                                Glyph="{StaticResource GlyphFind}" />
                        </Button>
                    </Grid>

                    <ItemsControl
                        Grid.Row="1"
                        Margin="0,12,0,0"
                        ItemsSource="{x:Bind ViewModel.MenuItems}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate x:DataType="models:MenuItem">
                                <controls:MenuItemControl
                                    Command="{x:Bind ActionCommand}"
                                    CommandParameter="{x:Bind}"
                                    Glyph="{x:Bind Glyph}"
                                    IsSelected="{x:Bind IsSelected, Mode=OneWay}"
                                    Text="{x:Bind Text}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <StackPanel Grid.Row="2" Margin="0,12">
                        <HyperlinkButton
                            Margin="12,0,12,4"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Left"
                            AutomationProperties.Name="{x:Bind strings:Resources.GetAmbiePlus}"
                            Command="{x:Bind ViewModel.OpenPremiumCommand}"
                            ToolTipService.ToolTip="{x:Bind strings:Resources.GetAmbiePlus}"
                            Visibility="{x:Bind ViewModel.PremiumButtonVisible, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <FontIcon
                                    x:Name="PremiumIcon"
                                    FontFamily="{StaticResource FluentUIGlyphsCustom}"
                                    Glyph="{StaticResource GlyphCustomPremium}"
                                    Visibility="Collapsed" />
                                <TextBlock
                                    x:Name="PremiumText"
                                    Text="{x:Bind strings:Resources.GetAmbiePlus}"
                                    Visibility="Visible">
                                    <animations:Implicit.ShowAnimations>
                                        <animations:OpacityAnimation
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.6" />
                                    </animations:Implicit.ShowAnimations>
                                </TextBlock>
                            </StackPanel>
                        </HyperlinkButton>

                        <ItemsControl ItemsSource="{x:Bind ViewModel.FooterItems}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate x:DataType="models:MenuItem">
                                    <controls:MenuItemControl
                                        Command="{x:Bind ActionCommand}"
                                        CommandParameter="{x:Bind}"
                                        Glyph="{x:Bind Glyph}"
                                        IsSelected="{x:Bind IsSelected, Mode=OneWay}"
                                        Text="{x:Bind Text}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </Grid>
            </SplitView.Pane>

            <Border x:Name="MainFrameBorder" Background="{ThemeResource DefaultPageBackgroundBrush}">
                <Frame x:Name="MainFrame" Margin="{StaticResource TopPlayerPageMargin}" />
            </Border>
        </SplitView>

        <Grid
            x:Name="PlayerPanelGrid"
            Height="{StaticResource TopPlayerPanelHeight}"
            Margin="72,0,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Background="{ThemeResource SystemControlAcrylicElementBrush}"
            BorderBrush="{ThemeResource DividerStrokeColorDefaultBrush}"
            BorderThickness="0,0,0,1"
            Canvas.ZIndex="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="180" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" MinWidth="180" />
            </Grid.ColumnDefinitions>

            <controls:PlayerControl Margin="8,0,0,0" />

            <controls:ActiveTrackList
                x:Name="TrackList"
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                ShowList="True"
                TrackListChanged="{x:Bind ViewModel.UpdateCanSave}" />

            <StackPanel
                Grid.Column="2"
                Margin="0,0,8,4"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Orientation="Horizontal"
                Spacing="2">
                <controls:SaveMixButton MixSaved="{x:Bind ViewModel.UpdateCanSave}" Visibility="{x:Bind ViewModel.CanSaveMix, Mode=OneWay}">
                    <animations:Implicit.ShowAnimations>
                        <animations:OpacityAnimation
                            From="0"
                            To="1"
                            Duration="0:0:0.6" />
                    </animations:Implicit.ShowAnimations>
                </controls:SaveMixButton>
                <!--<Button
                    AutomationProperties.Name="{x:Bind strings:Resources.ScreensaverMode}"
                    Click="{x:Bind ViewModel.GoToScreensaver}"
                    Style="{StaticResource SmallSubtleIconButton}"
                    ToolTipService.ToolTip="{x:Bind strings:Resources.ScreensaverMode}">
                    <FontIcon
                        FontFamily="{StaticResource FluentUIGlyphs}"
                        FontSize="14"
                        Glyph="{StaticResource GlyphPhoto}" />
                </Button>-->
                <Button
                    x:Name="ShareButton"
                    AutomationProperties.Name="{x:Bind strings:Resources.ShareMessage}"
                    Command="{x:Bind ViewModel.OpenShareCommand}"
                    Style="{StaticResource SmallSubtleIconButton}"
                    ToolTipService.ToolTip="{x:Bind strings:Resources.ShareMessage}">
                    <FontIcon
                        FontFamily="{StaticResource FluentUIGlyphs}"
                        FontSize="14"
                        Glyph="{StaticResource GlyphShare}" />
                </Button>
            </StackPanel>
        </Grid>

        <winui:TeachingTip
            Title="{x:Bind strings:Resources.HelloAgain}"
            ActionButtonClick="TeachingTip_ActionButtonClick"
            ActionButtonContent="{x:Bind strings:Resources.RateUsText}"
            CloseButtonClick="TeachingTip_CloseButtonClick"
            CloseButtonContent="{x:Bind strings:Resources.Dismiss}"
            IsOpen="{x:Bind ViewModel.IsRatingMessageVisible, Mode=OneWay}"
            PreferredPlacement="BottomRight"
            Subtitle="{x:Bind strings:Resources.RateUsMessage}" />

        <winui:TeachingTip
            Title="{x:Bind strings:Resources.MissingShareSoundsTitle}"
            ActionButtonCommand="{x:Bind ViewModel.OpenMissingDialogCommand}"
            ActionButtonContent="{x:Bind strings:Resources.ReviewText}"
            CloseButtonCommand="{x:Bind ViewModel.DismissMissingDialogCommand}"
            CloseButtonContent="{x:Bind strings:Resources.Dismiss}"
            IsOpen="{x:Bind ViewModel.IsMissingSoundsMessageVisible, Mode=OneWay}"
            PreferredPlacement="Bottom"
            Subtitle="{x:Bind strings:Resources.MissingShareSoundsMessage}" />
    </Grid>
</Page>
