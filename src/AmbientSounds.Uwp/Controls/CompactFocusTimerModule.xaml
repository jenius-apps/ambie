<UserControl
    x:Class="AmbientSounds.Controls.CompactFocusTimerModule"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:constants="using:AmbientSounds.Constants"
    xmlns:converters="using:AmbientSounds.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ext="using:JeniusApps.Common.UI.Uwp"
    xmlns:local="using:AmbientSounds.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:strings="using:AmbientSounds.Strings"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <UserControl.Resources>
        <x:Double x:Key="SmallRingSize">40</x:Double>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.CancelVisible, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StartButton.(Grid.ColumnSpan)" Value="1" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  sliders page  -->
        <StackPanel Margin="12,12,12,0" Visibility="{x:Bind converters:VisibilityConverter.InvertBool(ViewModel.CancelVisible), Mode=OneWay}">
            <local:TimerSlider
                Margin="12,0,0,0"
                AutomationName="{x:Bind strings:Resources.FocusLength}"
                Header="{x:Bind strings:Resources.FocusLength}"
                IsEnabled="{x:Bind ViewModel.SlidersEnabled, Mode=OneWay}"
                Maximum="{x:Bind constants:FocusConstants.TimerLimit}"
                StepFrequency="5"
                TickFrequency="15"
                Value="{x:Bind ViewModel.FocusLength, Mode=TwoWay}" />

            <local:TimerSlider
                Margin="12,4,0,0"
                AutomationName="{x:Bind strings:Resources.RestLength}"
                Header="{x:Bind strings:Resources.RestLength}"
                IsEnabled="{x:Bind ViewModel.SlidersEnabled, Mode=OneWay}"
                Maximum="{x:Bind constants:FocusConstants.TimerLimit}"
                StepFrequency="5"
                TickFrequency="15"
                Value="{x:Bind ViewModel.RestLength, Mode=TwoWay}" />

            <local:TimerSlider
                Margin="12,4,0,12"
                AutomationName="{x:Bind strings:Resources.Repeats}"
                Header="{x:Bind strings:Resources.Repeats}"
                IsEnabled="{x:Bind ViewModel.SlidersEnabled, Mode=OneWay}"
                Maximum="8"
                TickFrequency="2"
                Value="{x:Bind ViewModel.Repetitions, Mode=TwoWay}" />

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel>
                    <TextBlock
                        FontSize="20"
                        FontWeight="SemiBold"
                        Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                        Text="{x:Bind ViewModel.TotalTime, Mode=OneWay}"
                        TextAlignment="Center" />
                    <TextBlock
                        FontSize="12"
                        Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                        Text="{x:Bind strings:Resources.DurationText}"
                        TextAlignment="Center" />
                </StackPanel>
                <StackPanel Grid.Column="1">
                    <TextBlock
                        FontSize="20"
                        FontWeight="SemiBold"
                        Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                        Text="{x:Bind ViewModel.EndTime, Mode=OneWay}"
                        TextAlignment="Center" />
                    <TextBlock
                        FontSize="12"
                        Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                        Text="{x:Bind strings:Resources.EndTimeText}"
                        TextAlignment="Center" />
                </StackPanel>
            </Grid>
        </StackPanel>

        <!--  task ui  -->
        <Grid Padding="24,24,24,0" Visibility="{x:Bind ViewModel.TasksVisible, Mode=OneWay}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <local:FocusTimer2
                    Width="{StaticResource SmallRingSize}"
                    Height="{StaticResource SmallRingSize}"
                    HorizontalAlignment="Left"
                    FocusLength="{x:Bind ViewModel.FocusLength, Mode=OneWay}"
                    FocusLengthProgress="{x:Bind ViewModel.FocusLengthProgress, Mode=OneWay}"
                    FocusRingVisible="{x:Bind ViewModel.IsFocusing, Mode=OneWay}"
                    RestLength="{x:Bind ViewModel.RestLength, Mode=OneWay}"
                    RestLengthProgress="{x:Bind ViewModel.RestLengthProgress, Mode=OneWay}"
                    RestRingVisible="{x:Bind ViewModel.IsResting, Mode=OneWay}" />

                <FontIcon
                    FontFamily="{StaticResource FluentUIGlyphs}"
                    FontSize="14"
                    Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                    Glyph="{StaticResource GlyphFocus}"
                    Visibility="{x:Bind ViewModel.IsFocusing, Mode=OneWay}" />
                <FontIcon
                    FontFamily="{StaticResource FluentUIGlyphs}"
                    FontSize="14"
                    Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                    Glyph="{StaticResource GlyphSleep}"
                    Visibility="{x:Bind ViewModel.IsResting, Mode=OneWay}" />

                <StackPanel
                    Grid.Column="1"
                    Margin="24,0,0,0"
                    Spacing="2">
                    <TextBlock Text="{x:Bind ViewModel.CurrentStatus, Mode=OneWay}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Foreground="{ThemeResource TextFillColorTertiaryBrush}" Text="{x:Bind ViewModel.TimeElapsed, Mode=OneWay}" />
                        <TextBlock Foreground="{ThemeResource TextFillColorTertiaryBrush}" Text="/" />
                        <TextBlock Foreground="{ThemeResource TextFillColorTertiaryBrush}" Text="{x:Bind ViewModel.OriginalSegmentLength, Mode=OneWay}" />
                    </StackPanel>
                </StackPanel>
            </Grid>

            <FlipView
                Grid.Row="1"
                Margin="0,12,0,16"
                Background="Transparent"
                ItemTemplate="{StaticResource TaskFlipViewItemTemplate}"
                ItemsSource="{x:Bind ViewModel.FocusTasks}"
                SelectedIndex="{x:Bind ViewModel.SelectedTaskIndex, Mode=TwoWay}" />
        </Grid>

        <!--  no task ui  -->
        <Grid Margin="12,0" Visibility="{x:Bind ViewModel.CountdownVisible, Mode=OneWay}">
            <Grid.ChildrenTransitions>
                <EntranceThemeTransition FromVerticalOffset="20" IsStaggeringEnabled="True" />
            </Grid.ChildrenTransitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <local:FocusTimer2
                Width="{StaticResource SmallRingSize}"
                Height="{StaticResource SmallRingSize}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FocusLength="{x:Bind ViewModel.FocusLength, Mode=OneWay}"
                FocusLengthProgress="{x:Bind ViewModel.FocusLengthProgress, Mode=OneWay}"
                FocusRingVisible="{x:Bind ViewModel.IsFocusing, Mode=OneWay}"
                RestLength="{x:Bind ViewModel.RestLength, Mode=OneWay}"
                RestLengthProgress="{x:Bind ViewModel.RestLengthProgress, Mode=OneWay}"
                RestRingVisible="{x:Bind ViewModel.IsResting, Mode=OneWay}" />
            <FontIcon
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontFamily="{StaticResource FluentUIGlyphs}"
                FontSize="12"
                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                Glyph="{StaticResource GlyphFocus}"
                Visibility="{x:Bind ViewModel.IsFocusing, Mode=OneWay}" />
            <FontIcon
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontFamily="{StaticResource FluentUIGlyphs}"
                FontSize="12"
                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                Glyph="{StaticResource GlyphSleep}"
                Visibility="{x:Bind ViewModel.IsResting, Mode=OneWay}" />

            <StackPanel
                Grid.Column="1"
                Margin="12,0,0,0"
                VerticalAlignment="Center">
                <TextBlock FontSize="12" Text="{x:Bind ViewModel.CurrentStatus, Mode=OneWay}" />
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        FontSize="12"
                        Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                        Text="{x:Bind ViewModel.TimeElapsed, Mode=OneWay}" />
                    <TextBlock
                        FontSize="12"
                        Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                        Text="/" />
                    <TextBlock
                        FontSize="12"
                        Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                        Text="{x:Bind ViewModel.OriginalSegmentLength, Mode=OneWay}" />
                </StackPanel>

                <ItemsControl
                    Margin="0,4,0,0"
                    ItemTemplate="{StaticResource FocusSegmentTemplate}"
                    ItemsPanel="{StaticResource FocusSegmentItemsPanel}"
                    ItemsSource="{x:Bind ViewModel.Segments}" />
            </StackPanel>

            <StackPanel
                Grid.Column="2"
                Margin="12,0,0,0"
                Orientation="Horizontal">
                <Button
                    AutomationProperties.Name="{x:Bind ViewModel.PrimaryButtonText, Mode=OneWay}"
                    Click="{x:Bind ViewModel.PlayOrPause}"
                    IsEnabled="{x:Bind ViewModel.PlayEnabled, Mode=OneWay}"
                    Style="{StaticResource SmallSubtleIconButton}">
                    <Grid>
                        <FontIcon
                            FontSize="12"
                            Style="{StaticResource PlayTimerIcon}"
                            Visibility="{x:Bind ViewModel.PlayVisible, Mode=OneWay}" />
                        <FontIcon
                            FontSize="12"
                            Style="{StaticResource FluentPauseTimerIcon}"
                            Visibility="{x:Bind ViewModel.PauseVisible, Mode=OneWay}" />
                    </Grid>
                </Button>
                <Button
                    Click="{x:Bind ViewModel.Stop}"
                    Style="{StaticResource SmallSubtleIconButton}"
                    Visibility="{x:Bind ViewModel.CancelVisible, Mode=OneWay}">
                    <FontIcon FontSize="12" Style="{StaticResource StopTimerIcon}" />
                </Button>
                <Button Style="{StaticResource SmallSubtleIconButton}" Visibility="{x:Bind ViewModel.CancelVisible, Mode=OneWay}">
                    <Grid>
                        <FontIcon
                            FontFamily="{StaticResource FluentUIGlyphs}"
                            FontSize="12"
                            Glyph="{StaticResource GlyphThreeDots}"
                            Visibility="{x:Bind ext:UIExtensions.InvertBoolToVis(ViewModel.SkipRestRequested), Mode=OneWay}" />

                        <winui:ProgressRing
                            Width="14"
                            Height="14"
                            AutomationProperties.AccessibilityView="Raw"
                            Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                            IsActive="{x:Bind ViewModel.SkipRestRequested, Mode=OneWay}"
                            Visibility="{x:Bind ViewModel.SkipRestRequested, Mode=OneWay}" />
                    </Grid>

                    <Button.Flyout>
                        <MenuFlyout Placement="BottomEdgeAlignedRight">
                            <MenuFlyoutItem
                                AutomationProperties.Name="{x:Bind strings:Resources.LogInterruption}"
                                Command="{x:Bind ViewModel.CompactInterruptionCommand}"
                                Text="{x:Bind strings:Resources.LogInterruption}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{StaticResource FluentUIGlyphs}" Glyph="{StaticResource GlyphInterruption}" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                AutomationProperties.Name="{x:Bind strings:Resources.SkipThisSegment}"
                                Command="{x:Bind ViewModel.SkipRestBreakCommand}"
                                Text="{x:Bind strings:Resources.SkipThisSegment}"
                                Visibility="{x:Bind ViewModel.IsResting, Mode=OneWay}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{StaticResource FluentUIGlyphs}" Glyph="{StaticResource GlyphSkip}" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
