<UserControl
    x:Class="AmbientSounds.Controls.CompactFocusTimerModule"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:constants="using:AmbientSounds.Constants"
    xmlns:converters="using:AmbientSounds.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ext="using:JeniusApps.Common.UI.Uwp"
    xmlns:local="using:AmbientSounds.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:strings="using:AmbientSounds.Strings"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <UserControl.Resources>
        <x:Double x:Key="SmallRingSize">40</x:Double>

        <Style
            x:Key="DropdownFlyoutStyle"
            BasedOn="{StaticResource DefaultFlyoutPresenterStyle}"
            TargetType="FlyoutPresenter">
            <Setter Property="Padding" Value="12,12,0,4" />
        </Style>
    </UserControl.Resources>

    <Grid>

        <!--  sliders page  -->
        <Grid
            Padding="12,0"
            ColumnSpacing="8"
            Visibility="{x:Bind ext:UIExtensions.InvertBoolToVis(ViewModel.CancelVisible), Mode=OneWay}">
            <animations:Implicit.ShowAnimations>
                <animations:OpacityAnimation
                    From="0"
                    To="1"
                    Duration="0:0:0.3" />
            </animations:Implicit.ShowAnimations>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <FontIcon
                FontFamily="{StaticResource FluentUIGlyphs}"
                FontSize="14"
                Glyph="{StaticResource GlyphFocus}" />

            <winui:DropDownButton
                Grid.Column="1"
                Width="60"
                Content="{x:Bind ViewModel.FocusLength, Mode=OneWay}">
                <winui:DropDownButton.Flyout>
                    <Flyout
                        FlyoutPresenterStyle="{StaticResource DropdownFlyoutStyle}"
                        Placement="Bottom"
                        ShouldConstrainToRootBounds="False">
                        <Grid Width="200">
                            <local:TimerSlider
                                AutomationName="{x:Bind strings:Resources.FocusLength}"
                                Header="{x:Bind strings:Resources.FocusLength}"
                                IsEnabled="{x:Bind ViewModel.SlidersEnabled, Mode=OneWay}"
                                Maximum="{x:Bind constants:FocusConstants.TimerLimit}"
                                StepFrequency="5"
                                TickFrequency="15"
                                Value="{x:Bind ViewModel.FocusLength, Mode=TwoWay}" />
                        </Grid>
                    </Flyout>
                </winui:DropDownButton.Flyout>
            </winui:DropDownButton>

            <FontIcon
                Grid.Column="2"
                FontFamily="{StaticResource FluentUIGlyphs}"
                FontSize="14"
                Glyph="{StaticResource GlyphSleep}" />

            <winui:DropDownButton
                Grid.Column="3"
                Width="60"
                Content="{x:Bind ViewModel.RestLength, Mode=OneWay}">
                <winui:DropDownButton.Flyout>
                    <Flyout
                        FlyoutPresenterStyle="{StaticResource DropdownFlyoutStyle}"
                        Placement="Bottom"
                        ShouldConstrainToRootBounds="False">
                        <Grid Width="200">
                            <local:TimerSlider
                                AutomationName="{x:Bind strings:Resources.RestLength}"
                                Header="{x:Bind strings:Resources.RestLength}"
                                IsEnabled="{x:Bind ViewModel.SlidersEnabled, Mode=OneWay}"
                                Maximum="{x:Bind constants:FocusConstants.TimerLimit}"
                                StepFrequency="5"
                                TickFrequency="15"
                                Value="{x:Bind ViewModel.RestLength, Mode=TwoWay}" />
                        </Grid>
                    </Flyout>
                </winui:DropDownButton.Flyout>
            </winui:DropDownButton>

            <FontIcon
                Grid.Column="4"
                FontFamily="{StaticResource FluentUIGlyphs}"
                FontSize="14"
                Glyph="{StaticResource GlyphRepeat}" />

            <winui:DropDownButton
                Grid.Column="5"
                Width="54"
                Content="{x:Bind ViewModel.Repetitions, Mode=OneWay}">
                <winui:DropDownButton.Flyout>
                    <Flyout
                        FlyoutPresenterStyle="{StaticResource DropdownFlyoutStyle}"
                        Placement="Bottom"
                        ShouldConstrainToRootBounds="False">
                        <Grid Width="200">
                            <local:TimerSlider
                                AutomationName="{x:Bind strings:Resources.Repeats}"
                                Header="{x:Bind strings:Resources.Repeats}"
                                IsEnabled="{x:Bind ViewModel.SlidersEnabled, Mode=OneWay}"
                                Maximum="8"
                                TickFrequency="2"
                                Value="{x:Bind ViewModel.Repetitions, Mode=TwoWay}" />
                        </Grid>
                    </Flyout>
                </winui:DropDownButton.Flyout>
            </winui:DropDownButton>

            <Button
                Grid.Column="6"
                AutomationProperties.Name="{x:Bind ViewModel.PrimaryButtonText, Mode=OneWay}"
                Click="{x:Bind ViewModel.PlayOrPause}"
                IsEnabled="{x:Bind ViewModel.PlayEnabled, Mode=OneWay}"
                Style="{StaticResource SmallSubtleIconButton}">
                <FontIcon FontSize="12" Style="{StaticResource PlayTimerIcon}" />
            </Button>
        </Grid>

        <!--  timer page  -->
        <Grid Margin="12,0" Visibility="{x:Bind ViewModel.CancelVisible, Mode=OneWay}">
            <animations:Implicit.ShowAnimations>
                <animations:OpacityAnimation
                    From="0"
                    To="1"
                    Duration="0:0:0.3" />
            </animations:Implicit.ShowAnimations>

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <local:FocusTimer2
                Width="{StaticResource SmallRingSize}"
                Height="{StaticResource SmallRingSize}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FocusLength="{x:Bind ViewModel.FocusLength, Mode=OneWay}"
                FocusLengthProgress="{x:Bind ViewModel.FocusLengthProgress, Mode=OneWay}"
                FocusRingVisible="{x:Bind ViewModel.IsFocusing, Mode=OneWay}"
                RestLength="{x:Bind ViewModel.RestLength, Mode=OneWay}"
                RestLengthProgress="{x:Bind ViewModel.RestLengthProgress, Mode=OneWay}"
                RestRingVisible="{x:Bind ViewModel.IsResting, Mode=OneWay}" />
            <FontIcon
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontFamily="{StaticResource FluentUIGlyphs}"
                FontSize="12"
                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                Glyph="{StaticResource GlyphFocus}"
                Visibility="{x:Bind ViewModel.IsFocusing, Mode=OneWay}" />
            <FontIcon
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontFamily="{StaticResource FluentUIGlyphs}"
                FontSize="12"
                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                Glyph="{StaticResource GlyphSleep}"
                Visibility="{x:Bind ViewModel.IsResting, Mode=OneWay}" />

            <StackPanel
                Grid.Column="1"
                Margin="12,0,0,0"
                VerticalAlignment="Center">
                <TextBlock FontSize="12" Text="{x:Bind ViewModel.CurrentStatus, Mode=OneWay}" />
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        FontSize="12"
                        Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                        Text="{x:Bind ViewModel.TimeElapsed, Mode=OneWay}" />
                    <TextBlock
                        FontSize="12"
                        Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                        Text="/" />
                    <TextBlock
                        FontSize="12"
                        Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                        Text="{x:Bind ViewModel.OriginalSegmentLength, Mode=OneWay}" />
                </StackPanel>

                <ItemsControl
                    Margin="0,4,0,0"
                    ItemTemplate="{StaticResource FocusSegmentTemplate}"
                    ItemsPanel="{StaticResource FocusSegmentItemsPanel}"
                    ItemsSource="{x:Bind ViewModel.Segments}" />
            </StackPanel>

            <StackPanel
                Grid.Column="2"
                Margin="12,0,0,0"
                Orientation="Horizontal">
                <Button
                    AutomationProperties.Name="{x:Bind ViewModel.PrimaryButtonText, Mode=OneWay}"
                    Click="{x:Bind ViewModel.PlayOrPause}"
                    IsEnabled="{x:Bind ViewModel.PlayEnabled, Mode=OneWay}"
                    Style="{StaticResource SmallSubtleIconButton}">
                    <Grid>
                        <FontIcon
                            FontSize="12"
                            Style="{StaticResource PlayTimerIcon}"
                            Visibility="{x:Bind ViewModel.PlayVisible, Mode=OneWay}" />
                        <FontIcon
                            FontSize="12"
                            Style="{StaticResource FluentPauseTimerIcon}"
                            Visibility="{x:Bind ViewModel.PauseVisible, Mode=OneWay}" />
                    </Grid>
                </Button>
                <Button
                    Click="{x:Bind ViewModel.Stop}"
                    Style="{StaticResource SmallSubtleIconButton}"
                    Visibility="{x:Bind ViewModel.CancelVisible, Mode=OneWay}">
                    <FontIcon FontSize="12" Style="{StaticResource StopTimerIcon}" />
                </Button>
                <Button Style="{StaticResource SmallSubtleIconButton}" Visibility="{x:Bind ViewModel.CancelVisible, Mode=OneWay}">
                    <Grid>
                        <FontIcon
                            FontFamily="{StaticResource FluentUIGlyphs}"
                            FontSize="12"
                            Glyph="{StaticResource GlyphThreeDots}"
                            Visibility="{x:Bind ext:UIExtensions.InvertBoolToVis(ViewModel.SkipRestRequested), Mode=OneWay}" />

                        <winui:ProgressRing
                            Width="14"
                            Height="14"
                            AutomationProperties.AccessibilityView="Raw"
                            Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                            IsActive="{x:Bind ViewModel.SkipRestRequested, Mode=OneWay}"
                            Visibility="{x:Bind ViewModel.SkipRestRequested, Mode=OneWay}" />
                    </Grid>

                    <Button.Flyout>
                        <MenuFlyout Placement="BottomEdgeAlignedRight">
                            <MenuFlyoutItem
                                AutomationProperties.Name="{x:Bind strings:Resources.LogInterruption}"
                                Command="{x:Bind ViewModel.CompactInterruptionCommand}"
                                Text="{x:Bind strings:Resources.LogInterruption}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{StaticResource FluentUIGlyphs}" Glyph="{StaticResource GlyphInterruption}" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                AutomationProperties.Name="{x:Bind strings:Resources.SkipThisSegment}"
                                Command="{x:Bind ViewModel.SkipRestBreakCommand}"
                                Text="{x:Bind strings:Resources.SkipThisSegment}"
                                Visibility="{x:Bind ViewModel.IsResting, Mode=OneWay}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{StaticResource FluentUIGlyphs}" Glyph="{StaticResource GlyphSkip}" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>

            <Grid
                Grid.Row="1"
                Grid.ColumnSpan="3"
                Height="32"
                Margin="-12,0"
                Visibility="{x:Bind ViewModel.TasksVisible, Mode=OneWay}">

                <Border
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    BorderThickness="0,1,0,0">
                    <Rectangle Fill="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
                </Border>

                <local:TaskTicker ItemsSource="{x:Bind ViewModel.FocusTasks}" SelectedIndex="{x:Bind ViewModel.SelectedTaskIndex, Mode=TwoWay}" />
            </Grid>
        </Grid>
    </Grid>
</UserControl>
