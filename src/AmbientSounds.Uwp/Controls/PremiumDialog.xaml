<ContentDialog
    x:Class="AmbientSounds.Controls.PremiumDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ani="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ex="using:JeniusApps.Common.UI.Uwp"
    xmlns:local="using:AmbientSounds.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:strings="using:AmbientSounds.Strings"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    Opened="OnOpened"
    Style="{StaticResource DefaultContentDialogStyle}"
    mc:Ignorable="d">
    <ContentDialog.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="HighContrast">
                    <SolidColorBrush x:Key="ImageGradientBrush" Color="{StaticResource SystemColorWindowColor}" />

                    <Style x:Key="IconBackdrop" TargetType="Ellipse">
                        <Setter Property="Width" Value="40" />
                        <Setter Property="Height" Value="40" />
                    </Style>

                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <LinearGradientBrush x:Key="ImageGradientBrush" StartPoint="0.5,1" EndPoint="0.5,0">
                        <GradientStop Offset="0" Color="#FF2B2B2B" />
                        <GradientStop Offset="0.3" Color="#002B2B2B" />
                    </LinearGradientBrush>

                    <Style x:Key="IconBackdrop" TargetType="Ellipse">
                        <Setter Property="Width" Value="40" />
                        <Setter Property="Height" Value="40" />
                        <Setter Property="Opacity" Value="1" />
                    </Style>

                </ResourceDictionary>
                <ResourceDictionary x:Key="Light">
                    <LinearGradientBrush x:Key="ImageGradientBrush" StartPoint="0.5,1" EndPoint="0.5,0">
                        <GradientStop Offset="0.0" Color="#FFFFFFFF" />
                        <GradientStop Offset="0.3" Color="#00FFFFFF" />
                    </LinearGradientBrush>

                    <Style x:Key="IconBackdrop" TargetType="Ellipse">
                        <Setter Property="Width" Value="40" />
                        <Setter Property="Height" Value="40" />
                        <Setter Property="Opacity" Value="0.5" />
                    </Style>

                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <Thickness x:Key="ContentDialogPadding">0</Thickness>
            <Thickness x:Key="ContentDialogBorderThickness">0</Thickness>

            <Style x:Key="FeatureIcon" TargetType="FontIcon">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{StaticResource FluentUIGlyphs}" />
                <Setter Property="FontSize" Value="24" />
            </Style>
        </ResourceDictionary>
    </ContentDialog.Resources>

    <Grid Width="440" Height="560">
        <Grid.RowDefinitions>
            <RowDefinition Height="200" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" MinHeight="160" />
        </Grid.RowDefinitions>
        <Border>
            <Border.Background>
                <ImageBrush
                    x:Name="BackgroundImage"
                    ImageFailed="OnImageFailed"
                    ImageSource="ms-appx:///Assets/AmbiePlusBanner.png"
                    Stretch="UniformToFill" />
            </Border.Background>
        </Border>

        <Rectangle Fill="{ThemeResource ImageGradientBrush}" Stretch="Fill" />

        <Button
            Margin="0,6,6,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            AutomationProperties.Name="{x:Bind strings:Resources.CloseText}"
            Click="CloseClick"
            Style="{StaticResource TinySubtleIconButton}"
            ToolTipService.ToolTip="{x:Bind strings:Resources.CloseText}">
            <FontIcon
                FontFamily="{StaticResource FluentUIGlyphs}"
                FontSize="{StaticResource SmallIconSize}"
                Foreground="{ThemeResource DefaultTextForegroundThemeBrush}"
                Glyph="{StaticResource GlyphCancelSemiBold}" />
        </Button>

        <Grid Grid.Row="1">
            <StackPanel VerticalAlignment="Center">
                <ani:Implicit.Animations>
                    <ani:OffsetAnimation />
                </ani:Implicit.Animations>

                <StackPanel
                    HorizontalAlignment="Center"
                    Orientation="Horizontal"
                    Spacing="8">
                    <Grid>
                        <Ellipse Fill="Orange" Style="{ThemeResource IconBackdrop}" />
                        <FontIcon
                            FontSize="20"
                            Foreground="DarkRed"
                            Glyph="{StaticResource GlyphSound}"
                            Style="{StaticResource FeatureIcon}" />
                    </Grid>
                    <Grid>
                        <Ellipse Fill="SkyBlue" Style="{ThemeResource IconBackdrop}" />
                        <FontIcon
                            Foreground="MidnightBlue"
                            Glyph="{StaticResource GlyphFilmstrip}"
                            Style="{StaticResource FeatureIcon}" />
                    </Grid>
                    <Grid>
                        <Ellipse Fill="PaleGreen" Style="{ThemeResource IconBackdrop}" />
                        <FontIcon
                            Margin="1,1,0,0"
                            Foreground="DarkGreen"
                            Glyph="{StaticResource GlyphLeaves}"
                            Style="{StaticResource FeatureIcon}" />
                    </Grid>
                </StackPanel>
                <TextBlock
                    Margin="40,12,40,0"
                    Text="{x:Bind strings:Resources.PremiumMessage}"
                    TextAlignment="Center"
                    TextWrapping="WrapWholeWords" />
            </StackPanel>
        </Grid>

        <Grid Grid.Row="2" Visibility="{x:Bind ViewModel.ThanksTextVisible, Mode=OneWay}">
            <StackPanel VerticalAlignment="Center">
                <TextBlock
                    AutomationProperties.AccessibilityView="Raw"
                    Text="😍 🎉 🥳 "
                    TextAlignment="Center" />
                <TextBlock
                    Grid.Row="1"
                    MaxWidth="240"
                    VerticalAlignment="Center"
                    Text="{x:Bind strings:Resources.ThankYouForSub}"
                    TextAlignment="Center"
                    TextWrapping="WrapWholeWords" />
            </StackPanel>
        </Grid>

        <Grid
            Grid.Row="2"
            Margin="24,0,24,24"
            Visibility="{x:Bind ViewModel.PurchasePageVisible, Mode=OneWay}">
            <ani:Implicit.ShowAnimations>
                <ani:OpacityAnimation
                    From="0"
                    To="1"
                    Duration="0:0:0.3" />
            </ani:Implicit.ShowAnimations>

            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Button
                Height="54"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                AutomationProperties.Name="{x:Bind MonthlyPriceContent.AutomationName, Mode=OneWay}"
                Command="{x:Bind ViewModel.PurchaseMonthlyCommand}"
                Style="{ThemeResource AccentButtonStyle}">
                <Grid>
                    <local:PriceButtonContent
                        x:Name="MonthlyPriceContent"
                        PriceInfo="{x:Bind ViewModel.MonthlyPriceInfo, Mode=OneWay}"
                        Visibility="{x:Bind ex:UIExtensions.InvertBoolToVis(ViewModel.ButtonLoading), Mode=OneWay}" />
                    <winui:ProgressRing
                        Width="20"
                        Height="20"
                        Foreground="{ThemeResource TextOnAccentFillColorPrimaryBrush}"
                        IsActive="{x:Bind ViewModel.ButtonLoading, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.ButtonLoading, Mode=OneWay}" />
                </Grid>
            </Button>

            <TextBlock
                Grid.Row="1"
                Margin="0,6"
                FontSize="12"
                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                Text="{x:Bind strings:Resources.OrText.ToLower()}"
                TextAlignment="Center" />

            <!--  annual button  -->
            <Button
                Grid.Row="2"
                Height="54"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                AutomationProperties.Name="{x:Bind AnnualPriceContent.AutomationName, Mode=OneWay}"
                Command="{x:Bind ViewModel.PurchaseAnnualCommand}"
                Visibility="{x:Bind ViewModel.AnnualSubExperimentEnabled}">
                <Grid>
                    <local:PriceButtonContent
                        x:Name="AnnualPriceContent"
                        PriceInfo="{x:Bind ViewModel.AnnualPriceInfo, Mode=OneWay}"
                        Visibility="{x:Bind ex:UIExtensions.InvertBoolToVis(ViewModel.AnnualButtonLoading), Mode=OneWay}" />
                    <winui:ProgressRing
                        Width="20"
                        Height="20"
                        Foreground="{ThemeResource DefaultTextForegroundThemeBrush}"
                        IsActive="{x:Bind ViewModel.AnnualButtonLoading, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.AnnualButtonLoading, Mode=OneWay}" />
                </Grid>
            </Button>

            <!--  lifetime button  -->
            <Button
                Grid.Row="2"
                Height="54"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Command="{x:Bind ViewModel.PurchaseLifetimeCommand}"
                Visibility="{x:Bind ex:UIExtensions.InvertBoolToVis(ViewModel.AnnualSubExperimentEnabled)}">
                <Grid>
                    <StackPanel Visibility="{x:Bind ex:UIExtensions.InvertBoolToVis(ViewModel.LifetimeButtonLoading), Mode=OneWay}">
                        <TextBlock
                            FontSize="12"
                            Text="{x:Bind ViewModel.LifetimePrice, Mode=OneWay}"
                            TextAlignment="Center" />
                        <TextBlock
                            x:Name="TariffText"
                            FontSize="10"
                            Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                            Text="25% increase applied in response to US tariffs on Canadian goods"
                            Visibility="Collapsed" />
                    </StackPanel>
                    <winui:ProgressRing
                        Width="20"
                        Height="20"
                        Foreground="{ThemeResource DefaultTextForegroundThemeBrush}"
                        IsActive="{x:Bind ViewModel.LifetimeButtonLoading, Mode=OneWay}"
                        Visibility="{x:Bind ViewModel.LifetimeButtonLoading, Mode=OneWay}" />
                </Grid>
            </Button>

            <HyperlinkButton
                Grid.Row="3"
                Margin="0,8,-8,-8"
                Padding="8,4"
                HorizontalAlignment="Right"
                Command="{x:Bind ViewModel.TogglePromoCodePageCommand}"
                Content="{x:Bind strings:Resources.EnterPromoCodeText}"
                FontSize="12"
                Foreground="{ThemeResource TextFillColorTertiaryBrush}" />
        </Grid>

        <Grid
            Grid.Row="2"
            Margin="24,-24,24,24"
            Visibility="{x:Bind ViewModel.PromoCodePageVisible, Mode=OneWay}">
            <ani:Implicit.ShowAnimations>
                <ani:OpacityAnimation
                    From="0"
                    To="1"
                    Duration="0:0:0.3" />
            </ani:Implicit.ShowAnimations>

            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" Spacing="4">
                <Button
                    x:Uid="BackButton"
                    Margin="-8,0,0,0"
                    Command="{x:Bind ViewModel.TogglePromoCodePageCommand}"
                    IsEnabled="{x:Bind ex:UIExtensions.Not(ViewModel.SubmitCodeCommand.IsRunning), Mode=OneWay}"
                    Style="{StaticResource SmallSubtleIconButton}">
                    <FontIcon
                        FontFamily="{StaticResource FluentUIGlyphs}"
                        FontSize="{StaticResource SmallIconSize}"
                        Glyph="{StaticResource GlyphBack}" />
                </Button>
                <TextBlock
                    VerticalAlignment="Center"
                    FontWeight="SemiBold"
                    Text="{x:Bind strings:Resources.EnterPromoCodeText}" />
            </StackPanel>

            <TextBlock
                Grid.Row="1"
                Margin="0,4,0,0"
                FontSize="12"
                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                Text="{x:Bind strings:Resources.PromoCodeMessage}"
                TextWrapping="Wrap" />

            <TextBox
                Grid.Row="2"
                Margin="0,12,0,0"
                IsEnabled="{x:Bind ex:UIExtensions.Not(ViewModel.SubmitCodeCommand.IsRunning), Mode=OneWay}"
                PlaceholderText="{x:Bind strings:Resources.EnterCodePlaceholder}"
                Text="{x:Bind ViewModel.PromoCodeInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <Button
                Grid.Row="3"
                MinHeight="48"
                Margin="0,12,0,0"
                HorizontalAlignment="Stretch"
                Command="{x:Bind ViewModel.SubmitCodeCommand}"
                Content="{x:Bind strings:Resources.SubmitText}"
                IsEnabled="{x:Bind ex:UIExtensions.Not(ViewModel.SubmitCodeCommand.IsRunning), Mode=OneWay}"
                Style="{StaticResource AccentButtonStyle}" />
        </Grid>
    </Grid>
</ContentDialog>
