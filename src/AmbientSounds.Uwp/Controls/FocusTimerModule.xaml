
<UserControl
    x:Class="AmbientSounds.Controls.FocusTimerModule"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:converters="using:AmbientSounds.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:AmbientSounds.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:AmbientSounds.Models"
    xmlns:strings="using:AmbientSounds.Strings"
    xmlns:viewmodels="using:AmbientSounds.ViewModels"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Style x:Key="HorizontalSnappingListView" TargetType="ListView">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="TabNavigation" Value="Once" />
            <Setter Property="IsSwipeEnabled" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition />
                        <ContentThemeTransition />
                        <ReorderThemeTransition />
                        <EntranceThemeTransition IsStaggeringEnabled="False" />
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <!--  this was changed to horizontal  -->
                        <ItemsStackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">

                            <!--  this was changed to add the two snap properties  -->
                            <ScrollViewer
                                x:Name="ScrollViewer"
                                AutomationProperties.AccessibilityView="Raw"
                                BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                HorizontalSnapPointsAlignment="Near"
                                HorizontalSnapPointsType="Mandatory"
                                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                                IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                                TabNavigation="{TemplateBinding TabNavigation}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                <ItemsPresenter
                                    Padding="{TemplateBinding Padding}"
                                    Footer="{TemplateBinding Footer}"
                                    FooterTemplate="{TemplateBinding FooterTemplate}"
                                    FooterTransitions="{TemplateBinding FooterTransitions}"
                                    Header="{TemplateBinding Header}"
                                    HeaderTemplate="{TemplateBinding HeaderTemplate}"
                                    HeaderTransitions="{TemplateBinding HeaderTransitions}" />
                            </ScrollViewer>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <StackPanel>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.CancelVisible, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StartButton.(Grid.ColumnSpan)" Value="1" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="890" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainContentRow.Height" Value="*" />
                        <Setter Target="FocusTimerGrid.(Grid.Row)" Value="0" />
                        <Setter Target="FocusTimerGrid.(Grid.Column)" Value="1" />
                        <Setter Target="FocusTimerGrid.Margin" Value="0,20,0,20" />
                        <Setter Target="SlidersPanel.(Grid.Column)" Value="0" />
                        <Setter Target="SlidersPanel.Margin" Value="12,12,0,12" />
                        <Setter Target="SlidersPanel.Width" Value="300" />
                        <Setter Target="DataText.(Grid.Row)" Value="0" />
                        <Setter Target="DataText.Margin" Value="12,12,0,12" />
                        <Setter Target="DataText.VerticalAlignment" Value="Center" />
                        <Setter Target="CountdownTimerPanel.(Grid.Row)" Value="0" />
                        <Setter Target="CountdownTimerPanel.(Grid.Column)" Value="1" />
                        <Setter Target="ButtonPanelColumn1.Width" Value="100" />
                        <Setter Target="ButtonPanelColumn2.Width" Value="100" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <winui:InfoBar
            Title="{x:Bind strings:Resources.FocusTimerHelpTitle}"
            Margin="0,0,0,8"
            IsOpen="{x:Bind ViewModel.IsHelpMessageVisible, Mode=TwoWay}"
            Message="{x:Bind strings:Resources.FocusTimerHelpMessage}"
            Visibility="{x:Bind ViewModel.IsHelpMessageVisible, Mode=OneWay}">
            <winui:InfoBar.ActionButton>
                <HyperlinkButton
                    Click="StartTutorial"
                    Content="{x:Bind strings:Resources.FocusTimerHelpAction}"
                    Visibility="{x:Bind IsDesktop}" />
            </winui:InfoBar.ActionButton>
        </winui:InfoBar>

        <!--  Module container  -->
        <Border Style="{StaticResource ModuleBorderStyle}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Rectangle Grid.RowSpan="3" Style="{StaticResource ModuleBackgroundRectStyle}" />

                <TextBlock
                    Margin="24,12,0,12"
                    FontWeight="SemiBold"
                    Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                    Text="{x:Bind strings:Resources.Timer}" />

                <!--  Header action buttons at top right of module  -->
                <Grid
                    Margin="12,8"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top">

                    <StackPanel Orientation="Horizontal" Visibility="{x:Bind ViewModel.IsHelpIconVisible, Mode=OneWay}">
                        <animations:Implicit.ShowAnimations>
                            <animations:OpacityAnimation
                                From="0"
                                To="1"
                                Duration="0:0:1" />
                        </animations:Implicit.ShowAnimations>
                        <HyperlinkButton
                            Padding="8,4"
                            AutomationProperties.Name="{x:Bind strings:Resources.Help}"
                            Click="{x:Bind ViewModel.ShowHelpMessage}"
                            ToolTipService.ToolTip="{x:Bind strings:Resources.Help}">
                            <FontIcon
                                FontFamily="{StaticResource FluentUIGlyphs}"
                                FontSize="16"
                                Glyph="{StaticResource GlyphHelp}" />
                        </HyperlinkButton>
                        <HyperlinkButton
                            Padding="8,4"
                            AutomationProperties.Name="{x:Bind strings:Resources.SettingsText}"
                            Click="OnSettingsClicked"
                            ToolTipService.ToolTip="{x:Bind strings:Resources.SettingsText}">
                            <FontIcon
                                FontFamily="{StaticResource FluentUIGlyphs}"
                                FontSize="16"
                                Glyph="{StaticResource GlyphSettings}" />
                            <FlyoutBase.AttachedFlyout>
                                <MenuFlyout Placement="BottomEdgeAlignedRight">
                                    <ToggleMenuFlyoutItem
                                        Click="OnCompactToggled"
                                        IsChecked="{x:Bind ViewModel.UseCompactMode, Mode=TwoWay}"
                                        Text="{x:Bind strings:Resources.SettingsCompactMode}" />
                                </MenuFlyout>
                            </FlyoutBase.AttachedFlyout>
                        </HyperlinkButton>

                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Visibility="{x:Bind ViewModel.CancelVisible, Mode=OneWay}">
                        <animations:Implicit.ShowAnimations>
                            <animations:OpacityAnimation
                                From="0"
                                To="1"
                                Duration="0:0:1" />
                        </animations:Implicit.ShowAnimations>

                        <HyperlinkButton
                            Padding="8,4"
                            AutomationProperties.Name="{x:Bind strings:Resources.CompactMode}"
                            Command="{x:Bind ViewModel.OpenCompactModeCommand}"
                            Visibility="{x:Bind IsDesktop}">
                            <ToolTipService.ToolTip>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <TextBlock
                                        FontWeight="SemiBold"
                                        Text="{x:Bind strings:Resources.CompactModeTooltipTitle}"
                                        TextWrapping="Wrap" />
                                    <TextBlock
                                        Grid.Row="1"
                                        Text="{x:Bind strings:Resources.CompactModeTooltipMessage}"
                                        TextWrapping="WrapWholeWords" />
                                </Grid>
                            </ToolTipService.ToolTip>
                            <FontIcon
                                FontFamily="{StaticResource FluentUIGlyphs}"
                                FontSize="16"
                                Glyph="{StaticResource GlyphCompact}" />
                        </HyperlinkButton>

                        <HyperlinkButton
                            Padding="8,4"
                            AutomationProperties.Name="{x:Bind strings:Resources.LogInterruption}"
                            Command="{x:Bind ViewModel.InterruptionCommand}"
                            ToolTipService.ToolTip="{x:Bind strings:Resources.LogInterruption}">
                            <FontIcon
                                FontFamily="{StaticResource FluentUIGlyphs}"
                                FontSize="16"
                                Glyph="{StaticResource GlyphInterruption}" />
                        </HyperlinkButton>
                    </StackPanel>
                </Grid>

                <Rectangle VerticalAlignment="Bottom" Style="{StaticResource ModuleDividerRectStyle}" />

                <Rectangle
                    Grid.Row="2"
                    VerticalAlignment="Top"
                    Style="{StaticResource ModuleDividerRectStyle}" />

                <!--  Module body  -->
                <Grid Grid.Row="1" MinHeight="120">
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="MainContentRow" Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <!--  Sliders  -->
                    <StackPanel
                        x:Name="SlidersPanel"
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="12,12,12,0"
                        VerticalAlignment="Center"
                        Visibility="{x:Bind converters:VisibilityConverter.InvertBool(ViewModel.CancelVisible), Mode=OneWay}">
                        <StackPanel>
                            <local:TimerSlider
                                x:Name="Slider1"
                                Margin="12,0,0,0"
                                AutomationName="{x:Bind strings:Resources.FocusLength}"
                                Header="{x:Bind strings:Resources.FocusLength}"
                                IsEnabled="{x:Bind ViewModel.SlidersEnabled, Mode=OneWay}"
                                Maximum="60"
                                StepFrequency="5"
                                TickFrequency="15"
                                Value="{x:Bind ViewModel.FocusLength, Mode=TwoWay}" />

                            <winui:TeachingTip
                                x:Name="TeachingTip1"
                                Title="{x:Bind strings:Resources.TipFocusTitle}"
                                ActionButtonClick="ShowTip2"
                                ActionButtonContent="{x:Bind strings:Resources.Next}"
                                PreferredPlacement="Bottom"
                                Subtitle="{x:Bind strings:Resources.TipFocusMessage}"
                                Target="{x:Bind Slider1}" />
                        </StackPanel>

                        <StackPanel>
                            <local:TimerSlider
                                x:Name="Slider2"
                                Margin="12,24,0,0"
                                AutomationName="{x:Bind strings:Resources.RestLength}"
                                Header="{x:Bind strings:Resources.RestLength}"
                                IsEnabled="{x:Bind ViewModel.SlidersEnabled, Mode=OneWay}"
                                Maximum="60"
                                StepFrequency="5"
                                TickFrequency="15"
                                Value="{x:Bind ViewModel.RestLength, Mode=TwoWay}" />

                            <winui:TeachingTip
                                x:Name="TeachingTip2"
                                Title="{x:Bind strings:Resources.TipRestTitle}"
                                ActionButtonClick="ShowTip3"
                                ActionButtonContent="{x:Bind strings:Resources.Next}"
                                PreferredPlacement="Bottom"
                                Subtitle="{x:Bind strings:Resources.TipRestMessage}"
                                Target="{x:Bind Slider2}" />
                        </StackPanel>

                        <StackPanel>
                            <local:TimerSlider
                                x:Name="Slider3"
                                Margin="12,24,0,0"
                                AutomationName="{x:Bind strings:Resources.Repeats}"
                                Header="{x:Bind strings:Resources.Repeats}"
                                IsEnabled="{x:Bind ViewModel.SlidersEnabled, Mode=OneWay}"
                                Maximum="8"
                                TickFrequency="2"
                                Value="{x:Bind ViewModel.Repetitions, Mode=TwoWay}" />

                            <winui:TeachingTip
                                x:Name="TeachingTip3"
                                Title="{x:Bind strings:Resources.TipRepeatsTitle}"
                                ActionButtonClick="ShowTip4"
                                ActionButtonContent="{x:Bind strings:Resources.Next}"
                                PreferredPlacement="Bottom"
                                Subtitle="{x:Bind strings:Resources.TipRepeatsMessage}"
                                Target="{x:Bind Slider3}" />
                        </StackPanel>
                    </StackPanel>

                    <!--  timer  -->
                    <Grid
                        x:Name="FocusTimerGrid"
                        Grid.Row="1 "
                        Grid.Column="1"
                        Width="250"
                        Margin="0,20,0,0"
                        Visibility="{x:Bind ViewModel.CancelVisible, Mode=OneWay}">
                        <local:FocusTimer2
                            Width="200"
                            Height="200"
                            FocusLength="{x:Bind ViewModel.FocusLength, Mode=OneWay}"
                            FocusLengthProgress="{x:Bind ViewModel.FocusLengthProgress, Mode=OneWay}"
                            FocusRingVisible="{x:Bind ViewModel.IsFocusing, Mode=OneWay}"
                            RestLength="{x:Bind ViewModel.RestLength, Mode=OneWay}"
                            RestLengthProgress="{x:Bind ViewModel.RestLengthProgress, Mode=OneWay}"
                            RestRingVisible="{x:Bind ViewModel.IsResting, Mode=OneWay}" />
                        <!--<local:FocusTimer
                            Width="200"
                            Height="200"
                            FocusLengthRemaining="{x:Bind ViewModel.FocusLengthRemaining, Mode=OneWay}"
                            RepetitionsRemaining="{x:Bind ViewModel.RepetitionsRemaining, Mode=OneWay}"
                            RestLengthRemaining="{x:Bind ViewModel.RestLengthRemaining, Mode=OneWay}"
                            SecondsRemaining="{x:Bind ViewModel.SecondsRemaining, Mode=OneWay}"
                            SecondsRingVisible="{x:Bind ViewModel.SecondsRingVisible, Mode=OneWay}" />-->
                    </Grid>

                    <Grid
                        x:Name="DataText"
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="12"
                        RowSpacing="12"
                        Visibility="{x:Bind converters:VisibilityConverter.InvertBool(ViewModel.CancelVisible), Mode=OneWay}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <StackPanel>
                            <TextBlock
                                FontSize="20"
                                FontWeight="SemiBold"
                                Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                                Text="{x:Bind ViewModel.TotalTime, Mode=OneWay}" />
                            <TextBlock
                                FontSize="12"
                                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                                Text="{x:Bind strings:Resources.DurationText}" />
                        </StackPanel>

                        <StackPanel Grid.Column="1">
                            <TextBlock
                                FontSize="20"
                                FontWeight="SemiBold"
                                Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                                Text="{x:Bind ViewModel.EndTime, Mode=OneWay}" />
                            <TextBlock
                                FontSize="12"
                                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                                Text="{x:Bind strings:Resources.EndTimeText}" />
                        </StackPanel>
                    </Grid>
                    <Grid
                        x:Name="CountdownTimerPanel"
                        Grid.Row="1"
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Visibility="{x:Bind ViewModel.CancelVisible, Mode=OneWay}">

                        <StackPanel Margin="0,60,0,69" Visibility="{x:Bind ViewModel.CountdownVisible, Mode=OneWay}">
                            <TextBlock
                                FontSize="72"
                                FontWeight="SemiBold"
                                Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                                Text="{x:Bind ViewModel.CurrentTimeRemaining, Mode=OneWay}"
                                TextAlignment="Center">
                                <animations:Implicit.ShowAnimations>
                                    <animations:OpacityAnimation
                                        From="0"
                                        To="1"
                                        Duration="0:0:2" />
                                    <animations:TranslationAnimation
                                        From="0,-40,0"
                                        To="0"
                                        Duration="0:0:2" />
                                </animations:Implicit.ShowAnimations>
                            </TextBlock>

                            <TextBlock
                                FontSize="20"
                                Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                Text="{x:Bind ViewModel.CurrentStatus, Mode=OneWay}"
                                TextAlignment="Center"
                                TextWrapping="Wrap">
                                <animations:Implicit.ShowAnimations>
                                    <animations:OpacityAnimation
                                        From="0"
                                        To="1"
                                        Duration="0:0:2" />
                                    <animations:TranslationAnimation
                                        From="0,20,0"
                                        To="0"
                                        Duration="0:0:2" />
                                </animations:Implicit.ShowAnimations>
                            </TextBlock>
                        </StackPanel>

                        <StackPanel Margin="0,29" Visibility="{x:Bind ViewModel.TasksVisible, Mode=OneWay}">
                            <TextBlock
                                FontSize="20"
                                Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                Text="{x:Bind ViewModel.CurrentTimeRemaining, Mode=OneWay}"
                                TextAlignment="Center">
                                <animations:Implicit.ShowAnimations>
                                    <animations:OpacityAnimation
                                        From="0"
                                        To="1"
                                        Duration="0:0:2" />
                                    <animations:TranslationAnimation
                                        From="0,-20,0"
                                        To="0"
                                        Duration="0:0:2" />
                                </animations:Implicit.ShowAnimations>
                            </TextBlock>

                            <FlipView
                                MaxWidth="600"
                                MaxHeight="160"
                                Margin="0,8,0,0"
                                Background="Transparent"
                                ItemTemplate="{StaticResource TaskFlipViewItemTemplate}"
                                ItemsSource="{x:Bind ViewModel.FocusTasks}"
                                SelectedIndex="{x:Bind ViewModel.SelectedTaskIndex, Mode=TwoWay}">
                                <animations:Implicit.ShowAnimations>
                                    <animations:OpacityAnimation
                                        From="0"
                                        To="1"
                                        Duration="0:0:2" />
                                    <animations:TranslationAnimation
                                        From="0,20,0"
                                        To="0"
                                        Duration="0:0:2" />
                                </animations:Implicit.ShowAnimations>
                            </FlipView>
                        </StackPanel>
                    </Grid>
                </Grid>

                <Grid
                    x:Name="ButtonsPanel"
                    Grid.Row="2"
                    Padding="8"
                    ColumnSpacing="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="ButtonPanelColumn1" Width="*" />
                        <ColumnDefinition x:Name="ButtonPanelColumn2" Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button
                        x:Name="StartButton"
                        Grid.ColumnSpan="2"
                        AutomationProperties.Name="{x:Bind ViewModel.PrimaryButtonText, Mode=OneWay}"
                        Click="{x:Bind ViewModel.PlayOrPause}"
                        IsEnabled="{x:Bind ViewModel.PlayEnabled, Mode=OneWay}"
                        Style="{StaticResource TimerActionButton}">
                        <Grid>
                            <FontIcon Style="{StaticResource PlayTimerIcon}" Visibility="{x:Bind ViewModel.PlayVisible, Mode=OneWay}" />
                            <FontIcon Style="{StaticResource PauseTimerIcon}" Visibility="{x:Bind ViewModel.PauseVisible, Mode=OneWay}" />
                        </Grid>
                    </Button>

                    <winui:TeachingTip
                        x:Name="TeachingTip4"
                        Title="{x:Bind strings:Resources.TipStartButtonTitle}"
                        CloseButtonClick="OnTutorialEnded"
                        CloseButtonContent="{x:Bind strings:Resources.CloseText}"
                        PreferredPlacement="Bottom"
                        Subtitle="{x:Bind strings:Resources.TipStartButtonMessage}"
                        Target="{x:Bind StartButton}" />

                    <Button
                        x:Name="StopButton"
                        Grid.Column="1"
                        AutomationProperties.Name="{x:Bind strings:Resources.ResetTimer}"
                        Click="OnResetClicked"
                        Style="{StaticResource TimerActionButton}"
                        Visibility="{x:Bind ViewModel.CancelVisible, Mode=OneWay}">
                        <FontIcon Style="{StaticResource StopTimerIcon}" />
                    </Button>
                </Grid>
            </Grid>
        </Border>

        <!--  recents module  -->
        <Grid
            Margin="0,6,0,0"
            HorizontalAlignment="Stretch"
            Visibility="{x:Bind ViewModel.IsRecentVisible, Mode=OneWay}">
            <animations:Implicit.Animations>
                <animations:OffsetAnimation Duration="0:0:0.15" />
            </animations:Implicit.Animations>

            <ListView
                Padding="0,0,200,0"
                AutomationProperties.Name="{x:Bind strings:Resources.RecentFocusList}"
                IsItemClickEnabled="True"
                ItemClick="OnRecentClicked"
                ItemsSource="{x:Bind ViewModel.RecentSettings}"
                ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                ScrollViewer.HorizontalScrollMode="Auto"
                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollMode="Disabled"
                SelectionMode="None"
                Style="{StaticResource HorizontalSnappingListView}">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="models:RecentFocusSettings">
                        <ListViewItem AutomationProperties.Name="{x:Bind converters:LocalizationConverter.RecentFocusAccessibleName(FocusMinutes, RestMinutes, Repeats)}">
                            <Grid Width="200" Padding="6,16">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <local:RecentFocusSettingsControl
                                    Foreground="SkyBlue"
                                    MaxValue="60"
                                    Text="{x:Bind strings:Resources.FocusText}"
                                    Value="{x:Bind FocusMinutes}" />
                                <local:RecentFocusSettingsControl
                                    Grid.Column="1"
                                    Foreground="Green"
                                    MaxValue="60"
                                    Text="{x:Bind strings:Resources.RestText}"
                                    Value="{x:Bind RestMinutes}" />
                                <local:RecentFocusSettingsControl
                                    Grid.Column="2"
                                    Foreground="DeepPink"
                                    MaxValue="8"
                                    Text="{x:Bind strings:Resources.Repeats}"
                                    Value="{x:Bind Repeats}" />
                            </Grid>
                        </ListViewItem>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </StackPanel>
</UserControl>
