<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CloseCompactMode.AutomationProperties.Name" xml:space="preserve">
    <value>Close Ambie Mini</value>
  </data>
  <data name="CloseCompactMode.ToolTipService.ToolTip" xml:space="preserve">
    <value>Close Ambie Mini</value>
  </data>
  <data name="CloseText" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Copyright.Text" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="CopyrightJeniusApps.Text" xml:space="preserve">
    <value>Copyright Jenius Apps</value>
  </data>
  <data name="HelloFromVancouver.Text" xml:space="preserve">
    <value>Hello from Vancouver</value>
  </data>
  <data name="LogoButton.AutomationProperties.Name" xml:space="preserve">
    <value>View app information</value>
  </data>
  <data name="MoreButton.AutomationProperties.Name" xml:space="preserve">
    <value>View more options</value>
  </data>
  <data name="CompactMode" xml:space="preserve">
    <value>Ambie Mini</value>
  </data>
  <data name="MoreButtonContact.Label" xml:space="preserve">
    <value>Contact the creator</value>
  </data>
  <data name="RateUsText" xml:space="preserve">
    <value>Rate us</value>
  </data>
  <data name="MoreButtonSettings.Label" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="MoreButtonShare.Label" xml:space="preserve">
    <value>Share link for Ambie</value>
  </data>
  <data name="MoreButtonTranslate.Label" xml:space="preserve">
    <value>Add or improve translations</value>
  </data>
  <data name="OffTextBlock.Text" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="OnTextBlock.Text" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="PauseTimerButton.AutomationProperties.Name" xml:space="preserve">
    <value>Pause the timer</value>
  </data>
  <data name="PlayerPauseText" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="PlayerPlayText" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="PlayTimerButton.AutomationProperties.Name" xml:space="preserve">
    <value>Continue the timer</value>
  </data>
  <data name="ReadyToPlayText" xml:space="preserve">
    <value>Ready to play</value>
  </data>
  <data name="SettingsTelemetrySwitch.Header" xml:space="preserve">
    <value>Telemetry</value>
  </data>
  <data name="SettingsText" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SleepTimerButton.AutomationProperties.Name" xml:space="preserve">
    <value>View sleep timer options</value>
  </data>
  <data name="SleepTimerButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>View sleep timer options</value>
  </data>
  <data name="Soundbeach" xml:space="preserve">
    <value>Beach</value>
  </data>
  <data name="Soundbirds" xml:space="preserve">
    <value>Birds</value>
  </data>
  <data name="Soundcitystreet" xml:space="preserve">
    <value>City street</value>
  </data>
  <data name="Soundcoffeeshop" xml:space="preserve">
    <value>Coffee shop</value>
  </data>
  <data name="Soundcreek" xml:space="preserve">
    <value>Creek</value>
  </data>
  <data name="Soundfireplace" xml:space="preserve">
    <value>Fireplace</value>
  </data>
  <data name="Soundrain" xml:space="preserve">
    <value>Rain</value>
  </data>
  <data name="Soundrainforest" xml:space="preserve">
    <value>Rainforest</value>
  </data>
  <data name="Soundunderwater" xml:space="preserve">
    <value>Underwater</value>
  </data>
  <data name="Soundwaterfall" xml:space="preserve">
    <value>Waterfall</value>
  </data>
  <data name="Soundwhitenoise" xml:space="preserve">
    <value>White noise</value>
  </data>
  <data name="SoundsLoadingRing.AutomationProperties.Name" xml:space="preserve">
    <value>Sounds are loading</value>
  </data>
  <data name="SoundUnplayable" xml:space="preserve">
    <value>Cannot play sound</value>
  </data>
  <data name="StopTimerButton.AutomationProperties.Name" xml:space="preserve">
    <value>Stop the timer and clear the time</value>
  </data>
  <data name="VolumeSlider.AutomationProperties.Name" xml:space="preserve">
    <value>Global volume</value>
  </data>
  <data name="VolumeSliderSound.AutomationProperties.Name" xml:space="preserve">
    <value>Sound volume</value>
  </data>
  <data name="SettingsThemeHeader.Text" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="SettingsThemeDefaultRadio.Content" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="SettingsThemeDarkRadio.Content" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="SettingsThemeLightRadio.Content" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Soundvacuum" xml:space="preserve">
    <value>Vacuum</value>
  </data>
  <data name="Soundthunder" xml:space="preserve">
    <value>Thunder</value>
  </data>
  <data name="SettingsNotificationsSwitch.Header" xml:space="preserve">
    <value>Notification for new sounds</value>
  </data>
  <data name="Soundwind" xml:space="preserve">
    <value>Wind</value>
  </data>
  <data name="AlreadyDownloaded" xml:space="preserve">
    <value>Already downloaded</value>
    <comment>The sound is already downloaded</comment>
  </data>
  <data name="BackButton.AutomationProperties.Name" xml:space="preserve">
    <value>Go back</value>
    <comment>Going back to the previous page</comment>
  </data>
  <data name="CanDownload" xml:space="preserve">
    <value>Can be downloaded</value>
    <comment>The sound can be downloaded</comment>
  </data>
  <data name="DownloadSoundButton.AutomationProperties.Name" xml:space="preserve">
    <value>Download sound</value>
  </data>
  <data name="DownloadSoundButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Download sound</value>
  </data>
  <data name="OnlineSoundsList.AutomationProperties.Name" xml:space="preserve">
    <value>Sound catalogue</value>
  </data>
  <data name="SoundsGridView.AutomationProperties.Name" xml:space="preserve">
    <value>Sounds</value>
    <comment>List of sounds</comment>
  </data>
  <data name="PrivacyPolicyButton.Content" xml:space="preserve">
    <value>Privacy policy</value>
  </data>
  <data name="PrivacyPolicyButton.AutomationProperties.Name" xml:space="preserve">
    <value>Privacy policy</value>
  </data>
  <data name="DeleteAppBarButton.Label" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteButton.AutomationProperties.Name" xml:space="preserve">
    <value>Delete sound</value>
  </data>
  <data name="DeleteTextBlock.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DownloadTextBlock.Text" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="RandomButton.AutomationProperties.Name" xml:space="preserve">
    <value>Play random sound</value>
  </data>
  <data name="RandomButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Play random sound</value>
  </data>
  <data name="ScreensaverMode" xml:space="preserve">
    <value>Screensaver mode</value>
  </data>
  <data name="SettingsScreensaverSwitch.Header" xml:space="preserve">
    <value>Screensaver</value>
  </data>
  <data name="BuyButton.AutomationProperties.Name" xml:space="preserve">
    <value>Purchase sound</value>
  </data>
  <data name="PreviewButton.AutomationProperties.Name" xml:space="preserve">
    <value>Preview sound</value>
  </data>
  <data name="PreviewButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Preview sound</value>
  </data>
  <data name="Paused" xml:space="preserve">
    <value>Paused</value>
    <comment>Sound is paused</comment>
  </data>
  <data name="Playing" xml:space="preserve">
    <value>Playing</value>
    <comment>Sound is playing</comment>
  </data>
  <data name="ActiveTrackListView.AutomationProperties.Name" xml:space="preserve">
    <value>Active sounds</value>
  </data>
  <data name="ClearActiveButton.AutomationProperties.Name" xml:space="preserve">
    <value>Clear all active sounds</value>
  </data>
  <data name="ClearActiveButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Clear all active sounds</value>
  </data>
  <data name="ConfirmSaveButton.AutomationProperties.Name" xml:space="preserve">
    <value>Confirm save</value>
  </data>
  <data name="GlobalVolume" xml:space="preserve">
    <value>Global volume</value>
  </data>
  <data name="NameInputBox.Header" xml:space="preserve">
    <value>Sound mix name</value>
  </data>
  <data name="NameInputBox.PlaceholderText" xml:space="preserve">
    <value>Optional</value>
  </data>
  <data name="RemoveActiveButton" xml:space="preserve">
    <value>Remove {0} from active list</value>
    <comment>Remove a sound from the list of active playing sounds. The parameter is the name of the sound to remove.</comment>
  </data>
  <data name="SaveMixButton.AutomationProperties.Name" xml:space="preserve">
    <value>Save custom sound mix</value>
  </data>
  <data name="SaveMixButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Save custom sound mix (Ctrl+S)</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="RenameText" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="RenameAppBarButton.Label" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="SignOutAppBarButton.Label" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="SignInDescriptionText" xml:space="preserve">
    <value>This will enable sound gallery sync across your devices.</value>
  </data>
  <data name="AccountOptionsButton.AutomationProperties.Name" xml:space="preserve">
    <value>View account options</value>
  </data>
  <data name="AccountOptionsButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>View account options</value>
  </data>
  <data name="SignInButton.AutomationProperties.Name" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SignInButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SyncAppBarButton.Label" xml:space="preserve">
    <value>Sync</value>
  </data>
  <data name="Attribution" xml:space="preserve">
    <value>Attribution</value>
  </data>
  <data name="BrowseText" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewSound" xml:space="preserve">
    <value>New sound</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
    <comment>Text for a button that will refresh a list with new data</comment>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Optional" xml:space="preserve">
    <value>Optional</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="Donate" xml:space="preserve">
    <value>Donate</value>
  </data>
  <data name="TermsOfUse" xml:space="preserve">
    <value>Terms of Use</value>
  </data>
  <data name="FollowTwitter" xml:space="preserve">
    <value>Follow us on Twitter</value>
  </data>
  <data name="Dismiss" xml:space="preserve">
    <value>Dismiss</value>
  </data>
  <data name="FirstLaunchMessage" xml:space="preserve">
    <value>Thank you for trying Ambie. For the best experience, try pinning us to your taskbar! Enjoy your relaxing stay 🏝</value>
  </data>
  <data name="HelloAndWelcome" xml:space="preserve">
    <value>Hello and welcome!</value>
  </data>
  <data name="PinToTaskbar" xml:space="preserve">
    <value>Pin to taskbar</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Catalogue" xml:space="preserve">
    <value>Catalogue</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="SelectSoundsPlaceholder" xml:space="preserve">
    <value>Mix and match up to 3 sounds</value>
  </data>
  <data name="ThemeSettings" xml:space="preserve">
    <value>Theme settings</value>
  </data>
  <data name="SettingsResumeOnLaunch" xml:space="preserve">
    <value>Auto resume when Ambie opens</value>
  </data>
  <data name="PricePerMonth" xml:space="preserve">
    <value>{0} per month</value>
    <comment>Price per month, where the parameter {0} is a price like $1.00.</comment>
  </data>
  <data name="SubscriptionText1" xml:space="preserve">
    <value>Access premium, high quality sounds</value>
  </data>
  <data name="SubscriptionText2" xml:space="preserve">
    <value>Download video screensavers</value>
  </data>
  <data name="SubscriptionText3" xml:space="preserve">
    <value>Support development</value>
  </data>
  <data name="ThankYouForSub" xml:space="preserve">
    <value>Thank you for subscribing!</value>
    <comment>Thank you message shown after user purchases a subscription.</comment>
  </data>
  <data name="HelloAgain" xml:space="preserve">
    <value>Hello again 👋🏽</value>
  </data>
  <data name="RateUsMessage" xml:space="preserve">
    <value>Enjoying Ambie? Please consider rating us!</value>
  </data>
  <data name="DownloadText" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="MissingSoundsMessage" xml:space="preserve">
    <value>We need to download some sounds in order to play this. Once downloaded, try playing this again. Start download?</value>
  </data>
  <data name="MissingSoundsTitle" xml:space="preserve">
    <value>Missing sounds</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="DeleteText" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="SizeMegaByte" xml:space="preserve">
    <value>{0} MB</value>
  </data>
  <data name="MoreScreensavers" xml:space="preserve">
    <value>More screensavers</value>
  </data>
  <data name="ScreensaverCatalogue" xml:space="preserve">
    <value>Screensaver catalogue</value>
  </data>
  <data name="ViewPremiumInfo" xml:space="preserve">
    <value>View premium info</value>
  </data>
  <data name="ComputeShader.Clouds" xml:space="preserve">
    <value>Clouds</value>
  </data>
  <data name="ComputeShader.ColoredSmoke" xml:space="preserve">
    <value>Colored smoke</value>
  </data>
  <data name="ComputeShader.Octagrams" xml:space="preserve">
    <value>Octagrams</value>
  </data>
  <data name="RenderingErrorInfo.Message" xml:space="preserve">
    <value>There was an issue displaying the screensaver. Try restarting Ambie, or contact us if the issue persists.</value>
  </data>
  <data name="RenderingErrorLink.Content" xml:space="preserve">
    <value>Report the issue</value>
  </data>
  <data name="RenderingErrorInfo.Title" xml:space="preserve">
    <value>Rendering error</value>
  </data>
  <data name="ToggleFullscreen" xml:space="preserve">
    <value>Toggle fullscreen</value>
  </data>
  <data name="GetAmbiePlus" xml:space="preserve">
    <value>Get Ambie+</value>
  </data>
  <data name="FocusText" xml:space="preserve">
    <value>Focus</value>
  </data>
  <data name="PauseTimer" xml:space="preserve">
    <value>Pause timer</value>
  </data>
  <data name="StartTimer" xml:space="preserve">
    <value>Start timer</value>
  </data>
  <data name="FocusSessionCompleteMessage" xml:space="preserve">
    <value>Well done!</value>
  </data>
  <data name="FocusSessionCompleteTitle" xml:space="preserve">
    <value>Focus session complete</value>
  </data>
  <data name="FocusSessionFocusMessage" xml:space="preserve">
    <value>Time to focus</value>
  </data>
  <data name="FocusSessionRestMessage" xml:space="preserve">
    <value>Time to rest</value>
  </data>
  <data name="RestText" xml:space="preserve">
    <value>Rest</value>
  </data>
  <data name="FocusDotTooltip" xml:space="preserve">
    <value>Focus session is active!</value>
  </data>
  <data name="SessionTypeFocus" xml:space="preserve">
    <value>Focusing</value>
  </data>
  <data name="SessionTypeRest" xml:space="preserve">
    <value>Resting</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="ResetTimer" xml:space="preserve">
    <value>Reset timer</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="FocusLength" xml:space="preserve">
    <value>Focus minutes</value>
  </data>
  <data name="FocusNotesPlaceholder" xml:space="preserve">
    <value>You can jot down any notes here 🙂</value>
  </data>
  <data name="FocusPlanningHeader" xml:space="preserve">
    <value>What's the plan?</value>
  </data>
  <data name="Notepad" xml:space="preserve">
    <value>Notepad</value>
  </data>
  <data name="Repeats" xml:space="preserve">
    <value>Repeats</value>
  </data>
  <data name="RestLength" xml:space="preserve">
    <value>Rest minutes</value>
  </data>
  <data name="FocusTimerHelpAction" xml:space="preserve">
    <value>Show me how to use it</value>
  </data>
  <data name="FocusTimerHelpMessage" xml:space="preserve">
    <value>This is an interval timer inspired by the pomodoro technique. The goal is to focus on a task for an extended period of time, then take a shorter rest break. Repeat this cycle to keep focusing!</value>
  </data>
  <data name="FocusTimerHelpTitle" xml:space="preserve">
    <value>Welcome to Focus Timer!</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="TipFocusMessage" xml:space="preserve">
    <value>Each cycle has a focus segment and a rest segment. Choose how long each focus segment will be. We recommend 25 minutes to start!</value>
  </data>
  <data name="TipFocusTitle" xml:space="preserve">
    <value>Set focus minutes</value>
  </data>
  <data name="TipRepeatsMessage" xml:space="preserve">
    <value>Each focus and rest cycle can repeat multiple times. Try adding 1 repeat!</value>
  </data>
  <data name="TipRepeatsTitle" xml:space="preserve">
    <value>Set repeats</value>
  </data>
  <data name="TipRestMessage" xml:space="preserve">
    <value>Now, choose how long each rest segment will be. We recommend about 5 minutes for now!</value>
  </data>
  <data name="TipRestTitle" xml:space="preserve">
    <value>Set rest minutes</value>
  </data>
  <data name="TipStartButtonMessage" xml:space="preserve">
    <value>Start the timer and work on your tasks. We'll send you notifications when it's time to rest. Work hard!</value>
  </data>
  <data name="TipStartButtonTitle" xml:space="preserve">
    <value>Ready, set, go</value>
  </data>
  <data name="RecentFocusAccessibleName" xml:space="preserve">
    <value>{0} focus minutes, {1} rest minutes, {2} repeats.</value>
  </data>
  <data name="RecentFocusList" xml:space="preserve">
    <value>List of recent focus configurations.</value>
  </data>
  <data name="ZeroToMax" xml:space="preserve">
    <value>0 to {0}</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="Interruptions" xml:space="preserve">
    <value>Interruptions</value>
  </data>
  <data name="FocusHistoryPlaceholderText" xml:space="preserve">
    <value>Your recent history will appear here</value>
  </data>
  <data name="LogInterruption" xml:space="preserve">
    <value>Log interruption</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="InterruptionMinutesTitle" xml:space="preserve">
    <value>Minutes interrupted</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="InterruptionMinutesHelpMessage" xml:space="preserve">
    <value>Were you interrupted by something? Keep track of your interruptions here, so you can review them later in your history.</value>
  </data>
  <data name="HistoryRecent" xml:space="preserve">
    <value>Recent history</value>
  </data>
  <data name="RoundsCompleted" xml:space="preserve">
    <value>Rounds completed</value>
  </data>
  <data name="ResultMessageFail1" xml:space="preserve">
    <value>Good effort</value>
  </data>
  <data name="ResultMessageSuccess1" xml:space="preserve">
    <value>You're amazing</value>
  </data>
  <data name="AppDisplayName" xml:space="preserve">
    <value>Ambie</value>
  </data>
  <data name="TaskModuleNewTaskPlaceholder" xml:space="preserve">
    <value>Add tasks to focus on, then press the start button</value>
  </data>
  <data name="TaskModuleTitle" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="TaskModuleRecentCompleted" xml:space="preserve">
    <value>Recently completed</value>
  </data>
  <data name="EditText" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="TasksCompleted" xml:space="preserve">
    <value>Tasks completed</value>
  </data>
  <data name="Timer" xml:space="preserve">
    <value>Timer</value>
  </data>
  <data name="TaskTitle" xml:space="preserve">
    <value>Task {0}</value>
  </data>
  <data name="FreeBadgeInfo" xml:space="preserve">
    <value>Free this week!</value>
  </data>
  <data name="SettingsCompactMode" xml:space="preserve">
    <value>Open Ambie Mini when focusing</value>
  </data>
  <data name="CompactModeTooltipTitle" xml:space="preserve">
    <value>Open Ambie Mini</value>
  </data>
  <data name="CompactModeTooltipMessage" xml:space="preserve">
    <value>With Ambie Mini, we'll shrink the window and display only the necessary items to help you focus.</value>
  </data>
  <data name="DurationText" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="EndTimeText" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="MiniText" xml:space="preserve">
    <value>Mini</value>
  </data>
  <data name="PausesText" xml:space="preserve">
    <value>Pauses</value>
  </data>
  <data name="EmptyHomeMessage" xml:space="preserve">
    <value>Download sounds from the catalogue</value>
  </data>
  <data name="EditHomePage" xml:space="preserve">
    <value>Edit home page</value>
  </data>
  <data name="EditHomePageMessage" xml:space="preserve">
    <value>Drag and drop sounds to personalize your home page. Try it now!</value>
  </data>
  <data name="EmptyCatalogueMessage" xml:space="preserve">
    <value>Sorry about that! We couldn't load the catalogue. Try checking your internet connection.</value>
  </data>
  <data name="AboutAmbie" xml:space="preserve">
    <value>About Ambie</value>
  </data>
  <data name="SettingsCompactModeDescription" xml:space="preserve">
    <value>Ambie Mini will open automatically when focusing</value>
  </data>
  <data name="SettingsNotificationsSwitchDescription" xml:space="preserve">
    <value>We'll notify you know when new sounds are available</value>
  </data>
  <data name="SettingsResumeOnLaunchDescription" xml:space="preserve">
    <value>On launch, Ambie will resume playing automatically</value>
  </data>
  <data name="SettingsTelemetrySwitchDescription" xml:space="preserve">
    <value>Crashes and anonymous usage info are reported to help improve Ambie</value>
  </data>
  <data name="BackgroundImage" xml:space="preserve">
    <value>Background image</value>
  </data>
  <data name="CustomImage" xml:space="preserve">
    <value>Custom image</value>
  </data>
  <data name="SettingsGeneralHeader" xml:space="preserve">
    <value>General settings</value>
  </data>
  <data name="SettingsTheme" xml:space="preserve">
    <value>Choose your mode</value>
  </data>
  <data name="SettingsThemeDescription" xml:space="preserve">
    <value>Change the colours that appear in Ambie</value>
  </data>
  <data name="ShareMessage" xml:space="preserve">
    <value>Share what you're listening to</value>
  </data>
  <data name="MissingShareSoundsMessage" xml:space="preserve">
    <value>Let's see if they can be downloaded.</value>
  </data>
  <data name="MissingShareSoundsTitle" xml:space="preserve">
    <value>You're missing some sounds</value>
  </data>
  <data name="ReviewText" xml:space="preserve">
    <value>Review</value>
  </data>
  <data name="ShareText" xml:space="preserve">
    <value>Share</value>
  </data>
  <data name="CopiedText" xml:space="preserve">
    <value>Copied!</value>
  </data>
  <data name="CopyText" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="OrText" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="BuyDurableTooltip" xml:space="preserve">
    <value>Unlock this sound</value>
  </data>
</root>